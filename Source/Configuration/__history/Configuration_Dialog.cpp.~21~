//---------------------------------------------------------------------------

#include <fmx.h>
#pragma hdrstop

#include "Configuration_Dialog.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.fmx"
//---------------------------------------------------------------------------
#define UNIT_ID                                     "CFG_DL"
#define BUILD_ID(Name)                              UNIT_ID+(String)"_"+Name
#define CLASS_ID									"CfgDLG"
//---------------------------------------------------------------------------
TConf_Dialog *Conf_Dialog;
//---------------------------------------------------------------------------
extern TSysLog *Logger;
//---------------------------------------------------------------------------
void DEBUG_CFGDL(int Level, String Msg){
#ifdef WEB_RENAMER_DEBUG
	Logger->Report(UNIT_ID,NAME_LEVEL(Level),Msg);
#endif
}
//---------------------------------------------------------------------------
__fastcall TConf_Dialog::TConf_Dialog(TComponent* Owner)
	: TForm(Owner)
{
	ComponentToRename = new TStringList();
	FGUITxt = NULL;
	FConfig = NULL;

	GeneralFrame = new TGeneralFrame(this);
	GeneralTreeItem->TagObject = GeneralFrame;
//	GeneralTreeItem->Tag = GENERAL_TREE_ITEM;
	GeneralFrame->Parent = Panel2;
	GeneralFrame->Align = TAlignLayout::Top;
	GeneralFrame->TreeNode = GeneralTreeItem;

	HistoryFrame = new THistoryFrame(this);
	HistoryTreeItem->TagObject = HistoryFrame;
//	HistoryTreeItem->Tag = HISTORY_TREE_ITEM;
	HistoryFrame->Align = TAlignLayout::Top;
	HistoryFrame->TreeNode = HistoryTreeItem;

	NameManagerFrame = new TNameManagerFrame(this);
	ManageNameTreeItem->TagObject = NameManagerFrame;
//	ManageNameTreeItem->Tag = MANAGEFILE_TREE_ITEM;
	NameManagerFrame->Align = TAlignLayout::Top;
	NameManagerFrame->TreeNode = ManageNameTreeItem;

	OutputNameFrame = new TOutputNameFrame(this);
	OutputNameTreeItem->TagObject = OutputNameFrame;
//	ManageNameTreeItem->Tag = MANAGEFILE_TREE_ITEM;
	OutputNameFrame->Align = TAlignLayout::Top;
	OutputNameFrame->TreeNode = OutputNameTreeItem;

	DataSourceFrame = new TDataSourceFrame(this);
	MainDataSourceItem->TagObject = DataSourceFrame;
	DataSourceFrame->Align = TAlignLayout::Top;
	DataSourceFrame->TreeNode = MainDataSourceItem;

	Panel2->TagObject = GeneralFrame;
	FGrabber = NULL;
	SafetyCount = 0;
    TestForm = new TForm3(this);
}
//---------------------------------------------------------------------------
void TConf_Dialog::CreateGUITxt(TNameValue *Src){
	DEBUG_CFGDL(INFO_DEBUG,"CreateGUITxt()");
	TNameValue *GUITxt = Src == NULL?FGUITxt:Src;
	if(GUITxt != NULL){
		FGUITxt = GUITxt;
		if(GUITxt->ValueExist(BUILD_ID("Title")) == false)
			GUITxt->AddString(BUILD_ID("Title"),"Configuration","Title for configuration dialog");
		if(GUITxt->ValueExist(BUILD_ID("OkButton")) == false)
			GUITxt->AddString(BUILD_ID("OkButton"),"Ok","Text for ok button");
		if(GUITxt->ValueExist(BUILD_ID("CancelButton")) == false)
			GUITxt->AddString(BUILD_ID("CancelButton"),"Cancel","Text for cancel button");
	}
	ComponentToRename->Add("OkButton");
	ComponentToRename->Add("CancelButton");
	GeneralFrame->CreateGUITxt(GUITxt);
	HistoryFrame->CreateGUITxt(GUITxt);
	NameManagerFrame->CreateGUITxt(GUITxt);
	OutputNameFrame->CreateGUITxt(GUITxt);
	DataSourceFrame->CreateGUITxt(GUITxt);
}
//---------------------------------------------------------------------------
TComponent *TConf_Dialog::SearchComponent(String Name){
	TList *Tmp = new TList();
	int a,b;
	Tmp->Add(this);
	TComponent *Cmp;
	a = 0;
	do{
		Cmp = (TComponent*)Tmp->Items[a];
		if(Cmp->Name == Name)
			return Cmp;
		for(b=0;b<Cmp->ComponentCount;b++)
			Tmp->Add(Cmp->Components[b]);
		a++;
	}while(a < Tmp->Count);
	return NULL;
}
//---------------------------------------------------------------------------
void TConf_Dialog::ApplyLanguage(TNameValue *Src){
	DEBUG_CFGDL(INFO_DEBUG,"ApplyLanguage()");
	int a;
	TComponent *Tmp;
	if(Src != NULL){
		FGUITxt = Src;
		for(a=0;a<ComponentToRename->Count;a++){
			Tmp = SearchComponent(ComponentToRename->Strings[a]);
			if(Tmp){
				if(Tmp->ClassName() == "TLabel")
					((TLabel*)Tmp)->Text = Src->GetString(BUILD_ID(Tmp->Name));
				if(Tmp->ClassName() == "TButton")
					((TButton*)Tmp)->Text = Src->GetString(BUILD_ID(Tmp->Name));
				if(Tmp->ClassName() == "TGroupBox")
					((TGroupBox*)Tmp)->Text = Src->GetString(BUILD_ID(Tmp->Name));
				if(Tmp->ClassName() == "TMenuItem")
					((TMenuItem*)Tmp)->Text = Src->GetString(BUILD_ID(Tmp->Name));
				if(Tmp->ClassName() == "TTreeViewItem")
					((TTreeViewItem*)Tmp)->Text = Src->GetString(BUILD_ID(Tmp->Name));
				if(Tmp->ClassName() == "TStringColumn")
					((TStringColumn*)Tmp)->Header = Src->GetString(BUILD_ID(Tmp->Name));
			}
		}
		Caption = Src->GetString(BUILD_ID("Title"));
		GeneralFrame->ApplyLanguage(Src);
		HistoryFrame->ApplyLanguage(Src);
		NameManagerFrame->ApplyLanguage(Src);
		OutputNameFrame->ApplyLanguage(Src);
		DataSourceFrame->ApplyLanguage(Src);
		//ResizeComponents();
	}
}
//---------------------------------------------------------------------------
void TConf_Dialog::ResizeComponents(){
	DEBUG_CFGDL(INFO_DEBUG,"ResizeComponents()");
	GeneralFrame->ResizeComponents();
	HistoryFrame->ResizeComponents();
	NameManagerFrame->ResizeComponents();
	OutputNameFrame->ResizeComponents();
}
//---------------------------------------------------------------------------
TNameValue *TConf_Dialog::GetGUITxt(){
	return FGUITxt;
}
//---------------------------------------------------------------------------
void TConf_Dialog::SetGUITxt(TNameValue *Val){
	DEBUG_CFGDL(INFO_DEBUG,"SetGUITxt()");
	FGUITxt = Val;
}
//---------------------------------------------------------------------------
TNameValue *TConf_Dialog::GetConf(){
	return FConfig;
}
//---------------------------------------------------------------------------
void TConf_Dialog::SetConf(TNameValue *Val){
	DEBUG_CFGDL(INFO_DEBUG,"SetConf()");
	FConfig = Val;
}
//---------------------------------------------------------------------------
TInfoGrabber *TConf_Dialog::GetGrabber(){
	return FGrabber;
}
//---------------------------------------------------------------------------
void TConf_Dialog::SetGrabber(TInfoGrabber *Val){
	DEBUG_CFGDL(INFO_DEBUG,"SetGrabber()");
	int a;
	TWebSource *Src;
	FGrabber = Val;
	DataSourceFrame->Grabber = Val;
	for(a=MainDataSourceItem->Count-1;a>-1;a--){
		MainDataSourceItem->Items[a]->Parent = NULL;
	}
	for(a=0;a<FGrabber->GetNumInfoSource();a++){
		Src = FGrabber->GetSourceByIndex(a);
		CreateWebSource(Src);
	}
}
//---------------------------------------------------------------------------
void TConf_Dialog::CreateConfiguration(TNameValue *Conf){
	DEBUG_CFGDL(INFO_DEBUG,"CreateConfiguration()");
	GeneralFrame->CreateConfiguration(Conf);
	HistoryFrame->CreateConfiguration(Conf);
	NameManagerFrame->CreateConfiguration(Conf);
	OutputNameFrame->CreateConfiguration(Conf);
}
//---------------------------------------------------------------------------
void TConf_Dialog::LoadConfiguration(TNameValue *Conf){
	DEBUG_CFGDL(INFO_DEBUG,"LoadConfiguration()");
	GeneralFrame->LoadConfiguration(Conf);
	HistoryFrame->LoadConfiguration(Conf);
	NameManagerFrame->LoadConfiguration(Conf);
	OutputNameFrame->LoadConfiguration(Conf);
}
//---------------------------------------------------------------------------
void TConf_Dialog::SaveConfiguration(TNameValue *Conf){
	DEBUG_CFGDL(INFO_DEBUG,"SaveConfiguration()");
	GeneralFrame->SaveConfiguration(Conf);
	HistoryFrame->SaveConfiguration(Conf);
	NameManagerFrame->SaveConfiguration(Conf);
    OutputNameFrame->SaveConfiguration(Conf);
}
//---------------------------------------------------------------------------
void __fastcall TConf_Dialog::ConfigurationTreeChange(TObject *Sender)
{
	TConfig_Frame *Frame;
	if(ConfigurationTree->Selected){
		DEBUG_CFGDL(INFO_DEBUG,"ConfigurationTreeChange() -> "+QUOTE_STRING(ConfigurationTree->Selected->Text));
		if(ConfigurationTree->Selected->TagObject){
			if(Panel2->TagObject){
				Frame = (TConfig_Frame*)Panel2->TagObject;
				Frame->Parent = NULL;
			}
			Frame = (TConfig_Frame*)ConfigurationTree->Selected->TagObject;
			Frame->Parent = Panel2;
			Frame->Align = TAlignLayout::Top;
			Panel2->TagObject = Frame;
			FrameTitleLabel->Text = ConfigurationTree->Selected->Text;
			Frame->ResizeComponents();
			/*switch(ConfigurationTree->Selected->Tag){
				case GENERAL_TREE_ITEM:{
					Frame->ResizeComponents();
				}break;
			}*/
		}
	}
}
//---------------------------------------------------------------------------
void __fastcall TConf_Dialog::FormShow(TObject *Sender)
{
	DEBUG_CFGDL(INFO_DEBUG,"FormShow()");
	if(ConfigurationTree->Selected)
		FrameTitleLabel->Text = ConfigurationTree->Selected->Text;
	else
		FrameTitleLabel->Text = Caption;
	GeneralTreeItem->IsSelected = true;
	NameManagerFrame->AcceptedExtensionEdit->Enabled = NameManagerFrame->AcceptedExtensionCheckBox->IsChecked;
	HistoryFrame->PopulateTree(NULL);
}
//---------------------------------------------------------------------------
void __fastcall TConf_Dialog::CreateWebSource(TWebSource *Src){
	DEBUG_CFGDL(INFO_DEBUG,"CreateWebSource() -> Name: "+QUOTED(Src));
	TDataSourceInfoFrame *InfoFrame = new TDataSourceInfoFrame(this);
	InfoFrame->Name = "WebFrame_"+IntToStr(SafetyCount);
	TTreeViewItem *Item = new TTreeViewItem(MainDataSourceItem);
	Item->Parent = MainDataSourceItem;
	Item->Text = Src->Name;
	Item->TagObject = InfoFrame;
	InfoFrame->Align = TAlignLayout::Top;
	InfoFrame->TreeNode = Item;
	InfoFrame->CreateGUITxt(GUITxt);
	InfoFrame->ApplyLanguage(GUITxt);
	InfoFrame->WebSource = Src;
//	if(Src->Type == SHOW_SOURCE_INFO){
		TShowPrefFrame *PrefFrame = new TShowPrefFrame(this);
		TTreeViewItem *SubItem = new TTreeViewItem(Item);
		PrefFrame->Name = "Preferences_"+IntToStr(SafetyCount);
		SubItem->Parent = Item;
		SubItem->TagObject = PrefFrame;
		PrefFrame->Align = TAlignLayout::Top;
		PrefFrame->TreeNode = SubItem;
		PrefFrame->CreateGUITxt(GUITxt);
		PrefFrame->ApplyLanguage(GUITxt);
		PrefFrame->WebSource = Src;
//	}
	if(Src->Type == MOVIE_SOURCE_INFO){
		SubItem->Visible = false;
		InfoFrame->UsePreferences->Enabled = false;
	}
	SafetyCount++;
}
//---------------------------------------------------------------------------

