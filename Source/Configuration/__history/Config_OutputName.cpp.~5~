//---------------------------------------------------------------------------

#include <fmx.h>
#pragma hdrstop

#include "Config_OutputName.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma link "Config_Frame"
#pragma resource "*.fmx"
TOutputName_Frame *OutputName_Frame;
//---------------------------------------------------------------------------
#define UNIT_ID                                     "CFG_ON"
#define BUILD_ID(Name)                              UNIT_ID+(String)"_"+Name
//---------------------------------------------------------------------------
extern TSysLog *Logger;
//---------------------------------------------------------------------------
void DEBUG_CFGON(int Level, String Msg){
#ifdef WEB_RENAMER_DEBUG
	Logger->Report(UNIT_ID,NAME_LEVEL(Level),Msg);
#endif
}
//---------------------------------------------------------------------------
__fastcall TOutputName_Frame::TOutputName_Frame(TComponent* Owner)
	: TConfig_Frame(Owner)
{
	Translator = new TNameTranslator(this);
	ShowExample.ShowName = "The big bang theory";
	ShowExample.Season = 6;
	ShowExample.Episode = 15;
	ShowExample.EpisodeTitle = "The Spoiler Alert Segmentation";
}
//---------------------------------------------------------------------------
void TOutputName_Frame::CreateGUITxt(TNameValue *GUITxt){
	DEBUG_CFGON(INFO_DEBUG,"CreateGUITxt()");
	GUITxt->AddString(BUILD_ID("TVShowGroupBox"),"TV Show name","Group box for TV Show");
	GUITxt->AddString(BUILD_ID("FilmGroupBox"),"Film name","Group box for Film");
	GUITxt->AddString(BUILD_ID("ShowInputTextLabel"),"Name format:","Format of output file");
	GUITxt->AddString(BUILD_ID("ShowFormatEditButton"),"Add","Text for add button");
	GUITxt->AddString(BUILD_ID("ShowFormatComboButton"),"Remove","Text for remove button");
	GUITxt->AddString(BUILD_ID("ShowExampleGroupBox"),"Example","Example group box for TV Show");
	GUITxt->AddString(BUILD_ID("ExampleShowLabel"),"Show: "+ShowExample.ShowName,"Example group box for TV Show");
	GUITxt->AddString(BUILD_ID("ExampleShowSeasonLabel"),"Season: "+IntToStr(ShowExample.Season),"Example group box for TV Show");
	GUITxt->AddString(BUILD_ID("ExampleShowEpisodeLabel"),"Episode: "+IntToStr(ShowExample.Episode),"Example group box for TV Show");
	GUITxt->AddString(BUILD_ID("ExampleShowTitle"),"Title: "+ShowExample.EpisodeTitle,"Example group box for TV Show");
	GUITxt->AddString(BUILD_ID("ExampleShowResult"),"Result:","Example group box for TV Show");
	GUITxt->AddString(BUILD_ID("ShowNamePopup"),"TV Show Name","Text for popup");
	GUITxt->AddString(BUILD_ID("ShowNameFirst"),"First letter uppercase","Text for popup");
	GUITxt->AddString(BUILD_ID("ShowNameLower"),"Lowercase","Text for popup");
	GUITxt->AddString(BUILD_ID("ShowNameUpper"),"Uppercase","Text for popup");
	GUITxt->AddString(BUILD_ID("ShowNameWord"),"First word letter uppercase","Text for popup");
	GUITxt->AddString(BUILD_ID("SeasonPopup"),"Season","Text for popup");
	GUITxt->AddString(BUILD_ID("SeasonNumber"),"Season number","Text for popup");
	GUITxt->AddString(BUILD_ID("Season2Digits"),"Season in 2 digits","Text for popup");
	GUITxt->AddString(BUILD_ID("Season3Digits"),"Season in 3 digits","Text for popup");
	GUITxt->AddString(BUILD_ID("EpisodePopup"),"Episode","Text for popup");
	GUITxt->AddString(BUILD_ID("EpisodeNumber"),"Episode number","Text for popup");
	GUITxt->AddString(BUILD_ID("Episode2Digits"),"Episode in 2 digits","Text for popup");
	GUITxt->AddString(BUILD_ID("Episode3Digits"),"Episode in 3 digits","Text for popup");
	GUITxt->AddString(BUILD_ID("ShowTitlePopup"),"TV Show Title","Text for popup");
	GUITxt->AddString(BUILD_ID("ShowTitleFirst"),"First letter uppercase","Text for popup");
	GUITxt->AddString(BUILD_ID("ShowTitleLower"),"Lowercase","Text for popup");
	GUITxt->AddString(BUILD_ID("ShowTitleUpper"),"Uppercase","Text for popup");
	GUITxt->AddString(BUILD_ID("ShowTitleWord"),"First word letter uppercase","Text for popup");
	GUITxt->AddString(BUILD_ID("TreeNode"),"Output name","Preferences on output name");
}
//---------------------------------------------------------------------------
void TOutputName_Frame::ApplyLanguage(TNameValue *Src){

	DEBUG_CFGON(INFO_DEBUG,"ApplyLanguage()");
	TStringList *Cmp = new TStringList();
	Cmp->Add("TVShowGroupBox");
	Cmp->Add("FilmGroupBox");
	Cmp->Add("ShowInputTextLabel");
	Cmp->Add("ShowFormatEditButton");
	Cmp->Add("ShowFormatComboButton");
	Cmp->Add("ShowExampleGroupBox");
	Cmp->Add("ExampleShowLabel");
	Cmp->Add("ExampleShowSeasonLabel");
	Cmp->Add("ExampleShowEpisodeLabel");
	Cmp->Add("ExampleShowTitle");
	Cmp->Add("ExampleShowResult");
	Cmp->Add("ShowNamePopup");
	Cmp->Add("ShowNameFirst");
	Cmp->Add("ShowNameLower");
	Cmp->Add("ShowNameUpper");
	Cmp->Add("ShowNameWord");
	Cmp->Add("SeasonPopup");
	Cmp->Add("SeasonNumber");
	Cmp->Add("Season2Digits");
	Cmp->Add("Season3Digits");
	Cmp->Add("EpisodePopup");
	Cmp->Add("EpisodeNumber");
	Cmp->Add("Episode2Digits");
	Cmp->Add("Episode3Digits");
	Cmp->Add("ShowTitlePopup");
	Cmp->Add("ShowTitleFirst");
	Cmp->Add("ShowTitleLower");
	Cmp->Add("ShowTitleUpper");
	Cmp->Add("ShowTitleWord");

	TConfig_Frame::ApplyLanguage(Src, UNIT_ID, Cmp);
	if(TreeNode)
		TreeNode->Text = Src->GetString(BUILD_ID("TreeNode"));
}
//---------------------------------------------------------------------------
void TOutputName_Frame::ResizeComponents(){
	DEBUG_CFGON(INFO_DEBUG,"ResizeComponents()");
}
//---------------------------------------------------------------------------
void __fastcall TOutputName_Frame::GenericShowEditPopupItem(TObject *Sender){
	TMenuItem *Item = (TMenuItem*)Sender;
	if(Item){
		String Input, Output;
		String Value;
		Input = ShowFormatEdit->Text;
		if(Item->Name == "ShowNameFirst")
			Value = START_PARAMETER+(String)"Showname"+END_PARAMETER;
		if(Item->Name == "ShowNameLower")
			Value = START_PARAMETER+(String)"showname"+END_PARAMETER;
		if(Item->Name == "ShowNameUpper")
			Value = START_PARAMETER+(String)"SHOWNAME"+END_PARAMETER;
		if(Item->Name == "ShowNameWord")
			Value = START_PARAMETER+(String)"ShowName"+END_PARAMETER;
		if(Item->Name == "SeasonNumber")
			Value = START_PARAMETER+(String)"Season"+END_PARAMETER;
		if(Item->Name == "Season2Digits")
			Value = START_PARAMETER+(String)"Season2"+END_PARAMETER;
		if(Item->Name == "Season3Digits")
			Value = START_PARAMETER+(String)"Season3"+END_PARAMETER;
		if(Item->Name == "EpisodeNumber")
			Value = START_PARAMETER+(String)"Episode"+END_PARAMETER;
		if(Item->Name == "Episode2Digits")
			Value = START_PARAMETER+(String)"Episode2"+END_PARAMETER;
		if(Item->Name == "Episode3Digits")
			Value = START_PARAMETER+(String)"Episode3"+END_PARAMETER;
		if(Item->Name == "ShowTitleFirst")
			Value = START_PARAMETER+(String)"Episodetitle"+END_PARAMETER;
		if(Item->Name == "ShowTitleLower")
			Value = START_PARAMETER+(String)"episodetitle"+END_PARAMETER;
		if(Item->Name == "ShowTitleUpper")
			Value = START_PARAMETER+(String)"EPISODETITLE"+END_PARAMETER;
		if(Item->Name == "ShowTitleWord")
			Value = START_PARAMETER+(String)"EpisodeTitle"+END_PARAMETER;

		Output = Input.Insert(Value,ShowFormatEdit->SelStart+1);
		ShowFormatEdit->Text = Output;
		ShowFormatEdit->SelStart += Value.Length();
	}
}
//---------------------------------------------------------------------------
void __fastcall TOutputName_Frame::ShowFormatEditButtonClick(TObject *Sender)
{
	FormatComboBox->Items->Add(ShowFormatEdit->Text);
    FormatComboBox->ItemIndex = FormatComboBox->Items->Count - 1;
}
//---------------------------------------------------------------------------
void __fastcall TOutputName_Frame::FormatComboBoxChange(TObject *Sender)
{
	String Txt = "";
	if(FormatComboBox->Selected)
		Txt = Translator->CreateTVShowName(FormatComboBox->Selected->Text,ShowExample);
	ExampleShowValue->Text = Txt;
}
//---------------------------------------------------------------------------
void __fastcall TOutputName_Frame::ShowFormatComboButtonClick(TObject *Sender)
{
	FormatComboBox->Items->Delete(FormatComboBox->ItemIndex);
}
//---------------------------------------------------------------------------
void TOutputName_Frame::LoadConfiguration(TNameValue *Conf){
	TConfig_Frame::LoadConfiguration(Conf);
	if(Conf){
		int a = 0;
		while(Conf->ValueExist("ShowOutFormat_"+IntToStr(a))){
			FormatComboBox->Items->Add(Conf->GetString("ShowOutFormat_"+IntToStr(a)));
			a++;
		}
		if(Conf->ValueExist("ShowOutFormatIndex"))
			FormatComboBox->ItemIndex = Conf->GetInt("ShowOutFormatIndex");
		else
			FormatComboBox->ItemIndex = 0;
	}
}
//---------------------------------------------------------------------------
void TOutputName_Frame::SaveConfiguration(TNameValue *Conf){
	if(Conf){
		Conf->SetInt("ShowOutFormatIndex",FormatComboBox->ItemIndex);
		int a = 0;
		while(Conf->ValueExist("ShowOutFormat_"+IntToStr(a))){
			Conf->RemoveValue("ShowOutFormat_"+IntToStr(a));
			a++;
		}
		for(a=0;a<FormatComboBox->Count;a++){
			Conf->AddString("ShowOutFormat_"+IntToStr(a),FormatComboBox->Items->Strings[a],"Format for show output name");
		}
		if(Conf->ValueExist("ShowOutFormat"))
			Conf->SetInt("ShowOutFormat",FormatComboBox->ItemIndex);
		else
			Conf->AddInt("ShowOutFormat",FormatComboBox->ItemIndex,"Index of format for show output name");
	}
}
//---------------------------------------------------------------------------
void TOutputName_Frame::CreateConfiguration(TNameValue *Conf){
	TConfig_Frame::CreateConfiguration(Conf);
	if(Conf){
		Conf->AddInt("ShowOutFormatIndex",0,"Index of format for show output name");
		Conf->AddString("ShowOutFormat_0","<<ShowName>> - <<season2>>x<<episode2>> - <<EpisodeTitle>>","Format for show output name");
		Conf->AddString("ShowOutFormat_1","<<ShowName>> - S<<season2>>e<<episode2>> - <<EpisodeTitle>>","Format for show output name");
		Conf->AddString("ShowOutFormat_2","<<ShowName>> * S<<season2>>e<<episode2>> * <<EpisodeTitle>>","Format for show output name");
	}
}
//---------------------------------------------------------------------------

